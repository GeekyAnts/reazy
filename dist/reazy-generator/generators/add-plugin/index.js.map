{"version":3,"sources":["../../../../src/reazy-generator/generators/add-plugin/index.js"],"names":["generators","require","fs","module","exports","Base","extend","constructor","args","opts","plugin","indexOf","pluginName","substring","pluginPath","apply","arguments","initializing","prompting","writing","self","npmInstall","save","pkg","readJSON","destinationPath","scripts","postadd","postaddScriptPath","split","spawnCommandSync","log","end"],"mappings":"AAAA;;;;AAEA,IAAIA,aAAaC,QAAQ,kBAAR,CAAjB;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;;AAEAE,OAAOC,OAAP,GAAiBJ,WAAWK,IAAX,CAAgBC,MAAhB,CAAuB;AACtCC,eAAa,qBAASC,IAAT,EAAeC,IAAf,EAAqB;AAChC,QAAGA,KAAKC,MAAL,CAAYC,OAAZ,CAAoB,KAApB,MAA+B,CAAC,CAAnC,EAAsC;AACpC,WAAKC,UAAL,GAAkB,cAAcH,KAAKC,MAAL,CAAYG,SAAZ,CAAsB,CAAtB,CAAhC;AACA,WAAKC,UAAL,GAAkB,WAAWL,KAAKC,MAAL,CAAYG,SAAZ,CAAsB,CAAtB,CAA7B;AACD,KAHD,MAGO;AACL,WAAKD,UAAL,GAAkB,WAAWH,KAAKC,MAAlC;AACA,WAAKI,UAAL,GAAkB,WAAWL,KAAKC,MAAlC;AACD;AACDV,eAAWK,IAAX,CAAgBU,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B;AACD,GAVqC;;AAYtCC,gBAAc,wBAAY,CAEzB,CAdqC;;AAgBtCC,aAAW,qBAAY,CAEtB,CAlBqC;;AAoBtCC,WAAS,mBAAY;AACnB,QAAMC,OAAO,IAAb;AACA;AACA,SAAKC,UAAL,CAAgB,CAAC,KAAKT,UAAN,CAAhB,EAAmC,EAACU,MAAM,IAAP,EAAnC,EAAiD,YAAY;AAC3D,UAAMC,MAAMH,KAAKlB,EAAL,CAAQsB,QAAR,CAAiBJ,KAAKK,eAAL,CAAqB,cAArB,EAAqCL,KAAKN,UAA1C,EAAsD,cAAtD,CAAjB,EAAwF,EAAxF,CAAZ;AACA,UAAGS,IAAIG,OAAJ,IAAeH,IAAIG,OAAJ,CAAYC,OAA9B,EAAuC;AACrC;AACA,YAAIC,oBAAoBL,IAAIG,OAAJ,CAAYC,OAAZ,CAAoBE,KAApB,CAA0B,GAA1B,CAAxB;AACAD,4BAAoBR,KAAKK,eAAL,cAAqB,cAArB,EAAqCL,KAAKN,UAA1C,4BAAyDc,iBAAzD,GAApB;AACA;AACA;AACAR,aAAKU,gBAAL,CAAsB,MAAtB,EAA8B,CAACF,iBAAD,CAA9B;AACA;AACD,OARD,MAQO;AACLR,aAAKW,GAAL,CAAS,sEAAT;AACD;AACF,KAbD;AAcD,GArCqC;;AAuCtCC,OAAK,eAAW;AACd,SAAKD,GAAL,CAAS,0BAA0B,KAAKnB,UAA/B,GAA4C,IAArD;AACD;AAzCqC,CAAvB,CAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar generators = require('yeoman-generator');\nvar fs = require('fs');\n\nmodule.exports = generators.Base.extend({\n  constructor: function(args, opts) {\n    if(opts.plugin.indexOf('../') !== -1) {\n      this.pluginName = '../reazy-' + opts.plugin.substring(3);\n      this.pluginPath = 'reazy-' + opts.plugin.substring(3);\n    } else {\n      this.pluginName = 'reazy-' + opts.plugin;\n      this.pluginPath = 'reazy-' + opts.plugin;\n    }\n    generators.Base.apply(this, arguments);\n  },\n\n  initializing: function () {\n\n  },\n\n  prompting: function () {\n\n  },\n\n  writing: function () {\n    const self = this;\n    // this.npmInstall([this.pluginNameTest], {save: true}, function () {\n    this.npmInstall([this.pluginName], {save: true}, function () {\n      const pkg = self.fs.readJSON(self.destinationPath('node_modules', self.pluginPath, 'package.json'), {});\n      if(pkg.scripts && pkg.scripts.postadd) {\n        // self.destinationRoot(self.destinationPath('node_modules', self.pluginName));\n        let postaddScriptPath = pkg.scripts.postadd.split('/');\n        postaddScriptPath = self.destinationPath('node_modules', self.pluginPath, ...postaddScriptPath);\n        // const cmd = postaddCommand[0];\n        // const args = postaddCommand.slice(1);\n        self.spawnCommandSync('node', [postaddScriptPath]);\n        // self.destinationRoot('../../');\n      } else {\n        self.log('No postadd script found. This plugin might require additional setup.');\n      }\n    });\n  },\n\n  end: function() {\n    this.log('\\nSuccessfully added ' + this.pluginName + '\\n');\n  }\n});\n"]}