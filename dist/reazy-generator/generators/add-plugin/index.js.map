{"version":3,"sources":["../../../../src/reazy-generator/generators/add-plugin/index.js"],"names":["generators","require","fs","module","exports","Base","extend","constructor","args","opts","pluginName","plugin","apply","arguments","initializing","prompting","writing","self","npmInstall","save","pkg","readJSON","destinationPath","scripts","postadd","postaddScriptPath","split","spawnCommandSync","log","end"],"mappings":"AAAA;;;;AAEA,IAAIA,aAAaC,QAAQ,kBAAR,CAAjB;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;;AAEAE,OAAOC,OAAP,GAAiBJ,WAAWK,IAAX,CAAgBC,MAAhB,CAAuB;AACtCC,eAAa,qBAASC,IAAT,EAAeC,IAAf,EAAqB;AAChC;AACA,SAAKC,UAAL,GAAkB,WAAWD,KAAKE,MAAlC;AACAX,eAAWK,IAAX,CAAgBO,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B;AACD,GALqC;;AAOtCC,gBAAc,wBAAY,CAEzB,CATqC;;AAWtCC,aAAW,qBAAY,CAEtB,CAbqC;;AAetCC,WAAS,mBAAY;AACnB,QAAMC,OAAO,IAAb;AACA,SAAKC,UAAL,CAAgB,CAAC,KAAKR,UAAN,CAAhB,EAAmC,EAACS,MAAM,IAAP,EAAnC,EAAiD,YAAY;AAC3D,UAAMC,MAAMH,KAAKf,EAAL,CAAQmB,QAAR,CAAiBJ,KAAKK,eAAL,CAAqB,cAArB,EAAqCL,KAAKP,UAA1C,EAAsD,cAAtD,CAAjB,EAAwF,EAAxF,CAAZ;AACA,UAAGU,IAAIG,OAAJ,CAAYC,OAAf,EAAwB;AACtB;AACA,YAAIC,oBAAoBL,IAAIG,OAAJ,CAAYC,OAAZ,CAAoBE,KAApB,CAA0B,GAA1B,CAAxB;AACAD,4BAAoBR,KAAKK,eAAL,cAAqB,cAArB,EAAqCL,KAAKP,UAA1C,4BAAyDe,iBAAzD,GAApB;AACA;AACA;AACAR,aAAKU,gBAAL,CAAsB,MAAtB,EAA8B,CAACF,iBAAD,CAA9B;AACA;AACD,OARD,MAQO;AACLR,aAAKW,GAAL,CAAS,sEAAT;AACD;AACF,KAbD;AAcD,GA/BqC;;AAiCtCC,OAAK,eAAW;AACd,SAAKD,GAAL,CAAS,0BAA0B,KAAKlB,UAA/B,GAA4C,IAArD;AACD;AAnCqC,CAAvB,CAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar generators = require('yeoman-generator');\nvar fs = require('fs');\n\nmodule.exports = generators.Base.extend({\n  constructor: function(args, opts) {\n    // this.pluginNameTest = '../reazy-' + opts.plugin;\n    this.pluginName = 'reazy-' + opts.plugin;\n    generators.Base.apply(this, arguments);\n  },\n\n  initializing: function () {\n\n  },\n\n  prompting: function () {\n\n  },\n\n  writing: function () {\n    const self = this;\n    this.npmInstall([this.pluginName], {save: true}, function () {\n      const pkg = self.fs.readJSON(self.destinationPath('node_modules', self.pluginName, 'package.json'), {});\n      if(pkg.scripts.postadd) {\n        // self.destinationRoot(self.destinationPath('node_modules', self.pluginName));\n        let postaddScriptPath = pkg.scripts.postadd.split('/');\n        postaddScriptPath = self.destinationPath('node_modules', self.pluginName, ...postaddScriptPath);\n        // const cmd = postaddCommand[0];\n        // const args = postaddCommand.slice(1);\n        self.spawnCommandSync('node', [postaddScriptPath]);\n        // self.destinationRoot('../../');\n      } else {\n        self.log('No postadd script found. This plugin might require additional setup.');\n      }\n    });\n  },\n\n  end: function() {\n    this.log('\\nSuccessfully added ' + this.pluginName + '\\n');\n  }\n});\n"]}