{"version":3,"sources":["../../../../src/reazy-generator/generators/app/index.js"],"names":["generators","require","path","assign","getPolyfill","module","exports","Base","extend","constructor","console","log","apply","arguments","initializing","pkg","fs","readJSON","destinationPath","props","name","process","cwd","split","sep","pop","description","dependencies","prompting","done","async","prompts","message","default","validate","input","match","when","prompt","then","bind","writing","application","copy","templatePath","copyTpl","config","deps","devDependencies","self","npmInstall","saveDev","save","spawnCommandSync","end","exit"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nvar generators = require('yeoman-generator');\nvar path = require('path');\nvar assign = require('object.assign').getPolyfill();\n\nmodule.exports = generators.Base.extend({\n  constructor: function() {\n    console.log('reazy init');\n    generators.Base.apply(this, arguments);\n  },\n\n  initializing: function () {\n    console.log('awdgu');\n    this.pkg = this.fs.readJSON(this.destinationPath('package.json'), {});\n    this.props = {\n      name: this.pkg.name || process.cwd().split(path.sep).pop(),\n      description: this.pkg.description\n    };\n\n    this.dependencies = [\n      'native-base@0.5.22',\n      'react-native-vector-icons@4.0.0',\n      'react@15.4.1',\n      'react-native-router-flux@3.37.0',\n      'react-native@0.40.0',\n      'reazy-native-router-actions@0.0.2',\n      'mobx@3.0.0',\n      'mobx-react@4.1.0'\n    ];\n  },\n\n  prompting: function () {\n    var done = this.async();\n    var prompts = [\n      {\n        name: 'name',\n        message: 'Project name',\n        default: this.props.name,\n        validate: function(input) {\n          if (!input.match(/^[$A-Z_][0-9A-Z_$]*$/i)) {\n            return `${input} is not a valid name for a project.\nPlease use a valid identifier name (alphanumeric).`;\n          }\n\n          else if (input === 'React') {\n            return `${input} is not a valid name for a project.\nPlease do not use the reserved word \"React\"`;\n          } else {\n            return true;\n          }\n        }\n      },\n      {\n        name: 'description',\n        message: 'Description',\n        when: !this.pkg.description\n      },\n      /*\n      {\n        type: 'checkbox',\n        name: 'providers',\n        message: 'What type of API are you making?',\n        choices: [\n          {\n            name: 'REST',\n            value: 'rest',\n            checked: true\n          },\n          {\n            name: 'Realtime via Socket.io',\n            value: 'socket.io',\n            checked: true\n          },\n          {\n            name: 'Realtime via Primus',\n            value: 'primus',\n          }\n        ]\n      },\n      {\n        type: 'list',\n        name: 'cors',\n        message: 'CORS configuration',\n        choices: [\n          {\n            name: 'Enabled for all domains',\n            value: 'enabled',\n            checked: true\n          },\n          {\n            name: 'Enabled for whitelisted domains',\n            value: 'whitelisted'\n          },\n          {\n            name: 'Disabled',\n            value: false\n          }\n        ]\n      },\n      {\n        type: 'input',\n        name: 'corsWhitelist',\n        message: 'Comma-separated domains for CORS whitelist. Include http(s)',\n        when: function(props){\n          return props.cors === 'whitelisted';\n        }\n      },\n      {\n        type: 'list',\n        name: 'database',\n        message: 'What database do you primarily want to use?',\n        default: 'nedb',\n        choices: [\n          {\n            name: 'Memory',\n            value: 'memory'\n          },\n          {\n            name: 'MongoDB',\n            value: 'mongodb'\n          },\n          {\n            name: 'MySQL',\n            value: 'mysql'\n          },\n          {\n            name: 'MariaDB',\n            value: 'mariadb'\n          },\n          {\n            name: 'NeDB',\n            value: 'nedb'\n          },\n          {\n            name: 'PostgreSQL',\n            value: 'postgres'\n          },\n          {\n            name: 'SQLite',\n            value: 'sqlite'\n          },\n          {\n           name: 'SQL Server',\n           value: 'mssql'\n          },\n          {\n            name: 'I will choose my own',\n            value: 'generic'\n          },\n        ]\n      },\n      {\n        type: 'checkbox',\n        name: 'authentication',\n        message: 'What authentication providers would you like to support?',\n        choices: [\n          {\n            name: 'local',\n            checked: true,\n            value: AUTH_PROVIDERS.local,\n          },\n          {\n            name: 'bitbucket',\n            value: AUTH_PROVIDERS.bitbucket,\n          },\n          {\n            name: 'dropbox',\n            value: AUTH_PROVIDERS.dropbox,\n          },\n          {\n            name: 'facebook',\n            value: AUTH_PROVIDERS.facebook,\n          },\n          {\n            name: 'github',\n            value: AUTH_PROVIDERS.github,\n          },\n          {\n            name: 'google',\n            value: AUTH_PROVIDERS.google,\n          },\n          {\n            name: 'instagram',\n            value: AUTH_PROVIDERS.instagram,\n          },\n          {\n            name: 'linkedin',\n            value: AUTH_PROVIDERS.linkedin,\n          },\n          {\n            name: 'paypal',\n            value: AUTH_PROVIDERS.paypal,\n          },\n          {\n            name: 'spotify',\n            value: AUTH_PROVIDERS.spotify\n          }\n        ]\n      }\n      */\n    ];\n\n    this.prompt(prompts).then(function (props) {\n      this.props = assign(this.props, props);\n      done();\n    }.bind(this));\n  },\n\n  writing: {\n    /*\n    services: function() {\n      this.props.services = [];\n\n      if (this.props.database) {\n        // If auth is enabled also create a user service\n        if (this.props.localAuth || this.props.authentication.length) {\n          this.props.services.push('user');\n\n          var providers = this.props.authentication.slice();\n\n          if (this.props.localAuth) {\n            providers.push('local');\n          }\n\n          this.composeWith('reazy:service', {\n            options: {\n              type: 'database',\n              database: this.props.database,\n              name: 'user',\n              authentication: true,\n              providers: providers\n            }\n          });\n        }\n\n        this.fs.copyTpl(\n          this.templatePath('service.js'),\n          this.destinationPath('src/services', 'index.js'),\n          this.props\n        );\n      }\n    },\n    */\n    application: function() {\n      this.fs.copy(this.templatePath('static'), this.destinationPath());\n      this.fs.copy(this.templatePath('static/.*'), this.destinationPath());\n      // this.fs.copy(this.templatePath('_gitignore'), this.destinationPath('', '.gitignore'));\n\n      this.fs.copyTpl(\n        this.templatePath('react-native-index.js'),\n        this.destinationPath('src/services/react-native', 'index.js'),\n        this.props\n      );\n\n    },\n\n    config: function() {\n      this.fs.copyTpl(\n        this.templatePath('package.json'),\n        this.destinationPath('package.json'),\n        this.props\n      );\n    },\n\n    deps: function() {\n      var devDependencies = [\n        'babel-jest@18.0.0',\n        'babel-plugin-transform-decorators-legacy',\n        'babel-preset-react-native@1.9.1',\n        'babel-preset-react-native-stage-0',\n        'jest@18.0.0',\n        'react-test-renderer@15.4.1'\n      ];\n\n      /*\n      this.dependencies.concat(devDependencies).forEach(function(dependency) {\n        var separatorIndex = dependency.indexOf('@');\n        var end = separatorIndex !== -1 ? separatorIndex : dependency.length;\n        var dependencyName = dependency.substring(0, end);\n\n        // Throw an error if the project name is the same as one of the dependencies\n        if(dependencyName === this.props.name) {\n          this.log.error('Your project can not be named ' + this.props.name + ' because the ' +\n            dependency + ' package will be installed as dependency.');\n          process.exit(1);\n        }\n      }.bind(this));\n      */\n\n      var self = this;\n\n      this.npmInstall(devDependencies, { saveDev: true});\n      this.npmInstall(this.dependencies, { save: true }, function() {\n        self.spawnCommandSync('react-native', ['upgrade']);\n        self.spawnCommandSync('react-native', ['link']);\n        self.fs.copy(self.templatePath('_babelrc'), self.destinationPath('', '.babelrc'));\n      });\n\n    }\n  },\n\n  end: function() {\n    this.log('\\nWoot! We\\'ve created your \"' + this.props.name + '\" app!');\n\n    this.log('To start your reazy app run `react-native run-ios` or `react-native run-android`.');\n\n    process.exit(0);\n  }\n});\n"]}