{"version":3,"sources":["../../../../src/reazy-generator/generators/remove-plugin/index.js"],"names":["generators","require","fs","module","exports","Base","extend","constructor","args","opts","pluginName","plugin","apply","arguments","initializing","prompting","writing","self","pkg","readJSON","destinationPath","scripts","preremove","preremoveScriptPath","split","spawnCommandSync","log","end"],"mappings":"AAAA;;;;AAEA,IAAIA,aAAaC,QAAQ,kBAAR,CAAjB;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;;AAEAE,OAAOC,OAAP,GAAiBJ,WAAWK,IAAX,CAAgBC,MAAhB,CAAuB;AACtCC,eAAa,qBAASC,IAAT,EAAeC,IAAf,EAAqB;AAChC;AACA,SAAKC,UAAL,GAAkB,WAAWD,KAAKE,MAAlC;AACAX,eAAWK,IAAX,CAAgBO,KAAhB,CAAsB,IAAtB,EAA4BC,SAA5B;AACD,GALqC;;AAOtCC,gBAAc,wBAAY,CAEzB,CATqC;;AAWtCC,aAAW,qBAAY,CAEtB,CAbqC;;AAetCC,WAAS,mBAAY;AACnB,QAAMC,OAAO,IAAb;;AAEA,QAAMC,MAAMD,KAAKf,EAAL,CAAQiB,QAAR,CAAiBF,KAAKG,eAAL,CAAqB,cAArB,EAAqCH,KAAKP,UAA1C,EAAsD,cAAtD,CAAjB,EAAwF,EAAxF,CAAZ;AACA,QAAGQ,IAAIG,OAAJ,CAAYC,SAAf,EAA0B;AACxB;AACA,UAAIC,sBAAsBL,IAAIG,OAAJ,CAAYC,SAAZ,CAAsBE,KAAtB,CAA4B,GAA5B,CAA1B;AACAD,4BAAsBN,KAAKG,eAAL,cAAqB,cAArB,EAAqCH,KAAKP,UAA1C,4BAAyDa,mBAAzD,GAAtB;AACA;AACA;AACAN,WAAKQ,gBAAL,CAAsB,MAAtB,EAA8B,CAACF,mBAAD,CAA9B;AACA;AACD,KARD,MAQO;AACLN,WAAKS,GAAL,CAAS,wDAAT;AACD;;AAED,SAAKD,gBAAL,CAAsB,KAAtB,EAA6B,CAAC,WAAD,EAAc,QAAd,EAAwBR,KAAKP,UAA7B,CAA7B;AACD,GAhCqC;;AAkCtCiB,OAAK,eAAW;AACd,SAAKD,GAAL,CAAS,4BAA4B,KAAKhB,UAAjC,GAA8C,IAAvD;AACD;AApCqC,CAAvB,CAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar generators = require('yeoman-generator');\nvar fs = require('fs');\n\nmodule.exports = generators.Base.extend({\n  constructor: function(args, opts) {\n    // this.pluginNameTest = '../reazy-' + opts.plugin;\n    this.pluginName = 'reazy-' + opts.plugin;\n    generators.Base.apply(this, arguments);\n  },\n\n  initializing: function () {\n\n  },\n\n  prompting: function () {\n\n  },\n\n  writing: function () {\n    const self = this;\n\n    const pkg = self.fs.readJSON(self.destinationPath('node_modules', self.pluginName, 'package.json'), {});\n    if(pkg.scripts.preremove) {\n      // self.destinationRoot(self.destinationPath('node_modules', self.pluginName));\n      let preremoveScriptPath = pkg.scripts.preremove.split('/');\n      preremoveScriptPath = self.destinationPath('node_modules', self.pluginName, ...preremoveScriptPath);\n      // const cmd = preremoveCommand[0];\n      // const args = preremoveCommand.slice(1);\n      self.spawnCommandSync('node', [preremoveScriptPath]);\n      // self.destinationRoot('../../');\n    } else {\n      self.log('No preremove script found. Uninstalling the package...');\n    }\n\n    this.spawnCommandSync('npm', ['uninstall', '--save', self.pluginName]);\n  },\n\n  end: function() {\n    this.log('\\nSuccessfully removed ' + this.pluginName + '\\n');\n  }\n});\n"]}